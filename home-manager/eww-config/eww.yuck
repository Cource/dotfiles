(defpoll TIME :interval "5s"
	 `date +"%H":"%M"`)
(defpoll DATE :interval "1m"
	 `date +"%d %b, %Y"`)
(defpoll DAY :interval "1m"
	 `date +"%A"`)
(defpoll BRIGHTNESS :interval "2s"
	 `brightnessctl info -m | cut -d, -f4`)
(defpoll NETWORK :interval "2s"
	 `nmcli c | head -n2 | tail -n +2 | awk -F'  +' '{printf "{\\"name\\": \\"%s\\", \\"type\\": \\"%s\\", \\"interface\\": \\"%s\\"}", $1, $3, $4}'`)
(defpoll IP :interval "20s"
    `ip addr show \$(nmcli c | head -n2 | tail -n +2 | awk -F'  +' '{print $4}') | grep -oP '(?<=inet\\s)\\d+(\\.\\d+){3}'`)
(defpoll WIFI_QUALITY :interval "10s"
	 `nmcli dev wifi | grep "*" | awk -F'  +' '{print $7}'`)
(defpoll VOLUME :interval "2s"
	 "wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/Volume: //;s/0.00/0/;s/0\\.//;s/\\.//;s/$/%/;s/.* //;s/]%/]/'")
(deflisten XMONADLOG
	 `xmonad-log`)

(defwindow statusbar
    :windowtype "dock"
    :geometry (geometry
	       :width "99.2%"
	       :height "3.5%"
	       :x "8px"
	       :y "8px")
    (box :class "bar"
	 (literal :vexpand true :class "ws" :content XMONADLOG)
	 (box :halign "center"
	      :space-evenly false
	      :spacing 10
	      (box :class "time" TIME)
	      (box :class "date" DATE))
	 (sys_info)))

(defwidget sys_info []
  (box :class "sysinfo"
       :halign "end"
       :space-evenly false
       :spacing 20
       (network)
       (box :space-evenly false :spacing 5 "󰕾" VOLUME)
       (box :space-evenly false :spacing 5 "" BRIGHTNESS)
       (battery_info)))

(defwidget battery_info []
  (overlay :class "battery"
	   (progress :valign "end" :value {EWW_BATTERY.BAT1.capacity})
	   (box :space-evenly false
		:spacing 5
		:halign "center"
		(label :text {EWW_BATTERY.BAT1.status == "Charging"?"󱐋":"󰁹"})
		"${EWW_BATTERY.BAT1.capacity}%")))

(defwidget network []
  (box :class "network"
       :space-evenly false
       :halign "start"
       :visible {NETWORK.type=="loopback" ? false : true}
       :spacing 5
       {NETWORK.type=="wifi" ?
           WIFI_QUALITY>75 ? "󰤨" :
	   WIFI_QUALITY>50 ? "󰤥" :
	   WIFI_QUALITY>25 ? "󰤢" :
	   WIFI_QUALITY>10 ? "󰤟" : "󰤯"
       : "󰈀"}
       {NETWORK.name}))

(defwindow home
    :stacking "bg"
    :window-type "desktop"
    :geometry (geometry
	      :width "50%"
	      :height "40%"
	      :anchor "bottom left"
	      :x "3%")
    (box :orientation "v"
	 :halign "start"
	 :valign "end"
	 :space-evenly false
	 (box :class "info"
	      :orientation "v"
	      :spacing 10
	      (box :space-evenly false
		   :orientation "v"
		   (network) (label :class "ip" :halign "start" :text IP)))
	 (label :class "day" :halign "start" :text DAY)
	 (label :class "time" :halign "start" :text TIME)))

